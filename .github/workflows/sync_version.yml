# This workflow synchronizes the version from the version.txt file to all project files
# It can be triggered manually or on changes to the version.txt file
name: Sync Version

on:
  # Trigger on changes to version.txt file
  push:
    paths:
      - 'version.txt'
    branches: ["dev"]
  
  # Allow manual trigger
  workflow_dispatch:

permissions:
  contents: write
  pull-requests: write

jobs:
  sync-version:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
      
      - name: Install uv
        uses: astral-sh/setup-uv@v4
        with:
          version: "latest"
      
      - name: Read version from version.txt file
        id: version
        run: |
          VERSION=$(cat version.txt)
          echo "VERSION=$VERSION" >> $GITHUB_ENV
          echo "version=$VERSION" >> $GITHUB_OUTPUT
          echo "Current version: $VERSION"
      
      - name: Sync versions across files
        run: |
          uv run .github/workflows/sync_version.py "${{ env.VERSION }}"
      
      - name: Create Pull Request
        if: steps.changes.outputs.has_changes == 'true'
        uses: peter-evans/create-pull-request@v5
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          commit-message: "Automated: sync version to ${{ env.VERSION }}"
          title: "Sync version to ${{ env.VERSION }}"
          body: |
            This PR synchronizes the version across all project files to `${{ env.VERSION }}`.
            
            Updated files:
            - `pyproject.toml`
            - `docs/spec/instrument/specification.md`
            - `specification/AOS/aos_schema.json`
            
            The version was read from the `VERSION` file.
          branch: version-sync-${{ env.VERSION }}
          delete-branch: true
          