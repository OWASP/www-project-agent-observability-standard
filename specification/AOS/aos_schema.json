{
    "$schema": "http://json-schema.org/draft-07/schema#",
    "title": "AOS Schema",
    "description": "JSON Schema for Agent Observability Standard",
    "version": "0.1.0",
    "$defs": {
        "A2AMessage": {
            "properties": {
                "jsonrpc": {
                    "const": "2.0",
                    "default": "2.0",
                    "title": "Jsonrpc",
                    "type": "string"
                },
                "id": {
                    "anyOf": [
                        {
                            "type": "integer"
                        },
                        {
                            "type": "string"
                        }
                    ],
                    "title": "Id"
                },
                "method": {
                    "const": "protocols/A2A",
                    "default": "protocols/A2A",
                    "title": "Method",
                    "type": "string"
                },
                "params": {
                    "type": "object",
                    "properties": {
                        "message": {
                            "additionalProperties": {},
                            "title": "Data",
                            "type": "object",
                            "description": "The raw json message of A2A protocol"
                        },
                        "reasoning": {
                            "type": "string",
                            "title": "Reasoning"
                        },
                        "required": [
                            "message"
                        ]
                    }
                },
                "required": [
                    "method",
                    "params",
                    "id"
                ],
                "title": "A2AMessage",
                "type": "object",
                "description": "Method that captures the A2A protocol messages."
            }
        },
        "Agent": {
            "type": "object",
            "title": "Agent",
            "properties": {
                "id": {
                    "type": "string"
                },
                "name": {
                    "type": "string",
                    "title": "Name",
                    "description": "Name of the agent"
                },
                "description": {
                    "type": "string",
                    "title": "Description",
                    "description": "Description of the agent"
                },
                "instructions": {
                    "type": "string",
                    "title": "Instructions",
                    "description": "Instructions for the agent"
                },
                "tools": {
                    "type": "array",
                    "items": {
                        "$ref": "#/$defs/ToolDefinition"
                    }
                },
                "mcpServers": {
                    "type": "array",
                    "items": {
                        "$ref": "#/$defs/MCPServer"
                    }
                },
                "resources": {
                    "type": "array",
                    "items": {
                        "$ref": "#/$defs/Resource"
                    }
                },
                "model": {
                    "$ref": "#/$defs/Model"
                },
                "version": {
                    "title": "Version",
                    "type": "string"
                },
                "provider": {
                    "$ref": "#/$defs/AgentProvider"
                },
                "organization": {
                    "$ref": "#/$defs/Organization"
                },
                "metadata": {
                    "anyOf": [
                        {
                            "additionalProperties": {},
                            "type": "object"
                        },
                        {
                            "type": "null"
                        }
                    ],
                    "default": null,
                    "title": "Metadata"
                }
            },
            "required": [
                "id",
                "name",
                "instructions",
                "version",
                "provider"
            ]
        },
        "AgentProvider": {
            "properties": {
                "name": {
                    "title": "Name",
                    "type": "string"
                },
                "url": {
                    "title": "Url",
                    "type": "string"
                },
                "metadata": {
                    "anyOf": [
                        {
                            "additionalProperties": {},
                            "type": "object"
                        },
                        {
                            "type": "null"
                        }
                    ],
                    "default": null,
                    "title": "Metadata"
                }
            },
            "required": [
                "name",
                "url"
            ],
            "title": "AgentProvider",
            "type": "object"
        },
        "AgentTrigger": {
            "type": "object",
            "title": "AgentTrigger",
            "properties": {
                "type": {
                    "type": "string",
                    "enum": [
                        "autonomous"
                    ],
                    "title": "Type"
                },
                "content": {
                    "items": {
                        "$ref": "#/$defs/Part"
                    },
                    "title": "Parts",
                    "type": "array"
                },
                "event": {
                    "$ref": "#/$defs/AgentTriggerEvent"
                },
                "metadata": {
                    "anyOf": [
                        {
                            "additionalProperties": {},
                            "type": "object"
                        },
                        {
                            "type": "null"
                        }
                    ],
                    "default": null,
                    "title": "Metadata"
                }
            },
            "required": [
                "type",
                "content",
                "event"
            ]
        },
        "AgentTriggerEvent": {
            "type": "object",
            "title": "Event",
            "description": "Event that triggered the agent",
            "properties": {
                "type": {
                    "type": "string",
                    "title": "Type",
                    "description": "Type of the event",
                    "examples": [
                        "email",
                        "slackNotification",
                        "jiraTicket"
                    ]
                },
                "id": {
                    "type": "string",
                    "title": "Id",
                    "description": "Id of the event"
                }
            },
            "required": [
                "id",
                "type"
            ]
        },
        "AgentTriggerStep": {
            "properties": {
                "jsonrpc": {
                    "const": "2.0",
                    "default": "2.0",
                    "title": "Jsonrpc",
                    "type": "string"
                },
                "id": {
                    "anyOf": [
                        {
                            "type": "integer"
                        },
                        {
                            "type": "string"
                        }
                    ],
                    "title": "Id"
                },
                "method": {
                    "const": "steps/agentTrigger",
                    "default": "steps/agentTrigger",
                    "title": "Method",
                    "type": "string"
                },
                "params": {
                    "type": "object",
                    "properties": {
                        "context": {
                            "$ref": "#/$defs/StepContext"
                        },
                        "trigger": {
                            "$ref": "#/$defs/AgentTrigger"
                        }
                    },
                    "required": [
                        "context",
                        "trigger"
                    ]
                }
            },
            "required": [
                "method",
                "params",
                "id"
            ],
            "title": "AgentTriggerStep",
            "type": "object",
            "description": "Trigger of the agent. User message trigger should not go here, but should be included in the MessageStep."
        },
        "ASOPRequest": {
            "oneOf": [
                {
                    "$ref": "#/$defs/MessageStep"
                },
                {
                    "$ref": "#/$defs/AgentTriggerStep"
                },
                {
                    "$ref": "#/$defs/MemoryContextRetrievalStep"
                },
                {
                    "$ref": "#/$defs/MemoryStoreStep"
                },
                {
                    "$ref": "#/$defs/ToolCallRequestStep"
                },
                {
                    "$ref": "#/$defs/ToolCallResultStep"
                },
                {
                    "$ref": "#/$defs/KnowledgeRetrievalStep"
                },
                {
                    "$ref": "#/$defs/PingRequest"
                },
                {
                    "$ref": "#/$defs/A2AMessage"
                },
                {
                    "$ref": "#/$defs/MCPMessage"
                }
            ],
            "title": "ASOPRequest"
        },
        "ASOPResponse": {
            "oneOf": [
                {
                    "$ref": "#/$defs/ASOPSuccessResponse"
                },
                {
                    "$ref": "#/$defs/PingRequestSuccessResponse"
                },
                {
                    "$ref": "#/$defs/JSONRPCErrorResponse"
                }
            ]
        },
        "ASOPSuccessResponse": {
            "properties": {
                "jsonrpc": {
                    "const": "2.0",
                    "default": "2.0",
                    "title": "Jsonrpc",
                    "type": "string"
                },
                "id": {
                    "anyOf": [
                        {
                            "type": "integer"
                        },
                        {
                            "type": "string"
                        }
                    ],
                    "title": "Id"
                },
                "result": {
                    "$ref": "#/$defs/ASOPSuccessResult"
                }
            },
            "required": [
                "id",
                "result",
                "jsonrpc"
            ],
            "type": "object",
            "title": "ASOPSuccessResponse"
        },
        "ASOPSuccessResult": {
            "properties": {
                "decision": {
                    "type": "string",
                    "title": "Decision",
                    "description": "The decision",
                    "enum": [
                        "allow",
                        "deny",
                        "modify"
                    ]
                },
                "reasoning": {
                    "type": "string",
                    "title": "Reasoning",
                    "description": "The reasoning of the decision"
                },
                "reasonCode": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "message": {
                    "type": "string",
                    "title": "Message",
                    "description": "Human readable message explaining the decision"
                },
                "data": {
                    "type": "object",
                    "title": "Data",
                    "additionalProperties": {},
                    "description": "Additional data"
                },
                "modifiedRequest": {
                    "$ref": "#/$defs/ASOPRequest",
                    "description": "Modified request if the decision is modify."
                }
            },
            "type": "object",
            "title": "Result",
            "required": [
                "decision",
                "message"
            ]
        },
        "DataPart": {
            "properties": {
                "kind": {
                    "const": "data",
                    "default": "data",
                    "description": "Type of the part",
                    "examples": [
                        "data"
                    ],
                    "title": "Kind",
                    "type": "string"
                },
                "data": {
                    "additionalProperties": {},
                    "title": "Data",
                    "type": "object"
                },
                "metadata": {
                    "anyOf": [
                        {
                            "additionalProperties": {},
                            "type": "object"
                        },
                        {
                            "type": "null"
                        }
                    ],
                    "default": null,
                    "title": "Metadata"
                }
            },
            "required": [
                "data"
            ],
            "title": "DataPart",
            "type": "object"
        },
        "FilePart": {
            "description": "Represents a File segment within parts.",
            "properties": {
                "file": {
                    "anyOf": [
                        {
                            "$ref": "#/definitions/FileWithBytes"
                        },
                        {
                            "$ref": "#/definitions/FileWithUri"
                        }
                    ],
                    "description": "File content either as url or bytes"
                },
                "kind": {
                    "const": "file",
                    "description": "Part type - file for FileParts",
                    "type": "string"
                },
                "metadata": {
                    "additionalProperties": {},
                    "description": "Optional metadata associated with the part.",
                    "type": "object"
                }
            },
            "required": [
                "file",
                "kind"
            ],
            "type": "object"
        },
        "FileSource": {
            "type": "object",
            "title": "FileSource",
            "properties": {
                "kind": {
                    "type": "string",
                    "const": "file"
                },
                "id": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "url": {
                    "type": "string"
                }
            },
            "required": [
                "kind",
                "id",
                "name"
            ]
        },
        "FileWithBytes": {
            "description": "Define the variant where 'bytes' is present and 'uri' is absent",
            "properties": {
                "bytes": {
                    "description": "base64 encoded content of the file",
                    "type": "string"
                },
                "mimeType": {
                    "description": "Optional mimeType for the file",
                    "type": "string"
                },
                "name": {
                    "description": "Optional name for the file",
                    "type": "string"
                }
            },
            "required": [
                "bytes"
            ],
            "type": "object"
        },
        "FileWithUri": {
            "description": "Define the variant where 'uri' is present and 'bytes' is absent",
            "properties": {
                "mimeType": {
                    "description": "Optional mimeType for the file",
                    "type": "string"
                },
                "name": {
                    "description": "Optional name for the file",
                    "type": "string"
                },
                "uri": {
                    "description": "URL for the File content",
                    "type": "string"
                }
            },
            "required": [
                "uri"
            ],
            "type": "object"
        },
        "InternalError": {
            "properties": {
                "code": {
                    "const": -32603,
                    "default": -32603,
                    "description": "Error code",
                    "examples": [
                        -32603
                    ],
                    "title": "Code",
                    "type": "integer"
                },
                "message": {
                    "const": "Internal error",
                    "default": "Internal error",
                    "description": "A short description of the error",
                    "examples": [
                        "Internal error"
                    ],
                    "title": "Message",
                    "type": "string"
                },
                "data": {
                    "anyOf": [
                        {},
                        {
                            "type": "null"
                        }
                    ],
                    "default": null,
                    "title": "Data"
                }
            },
            "required": [
                "code",
                "message"
            ],
            "title": "InternalError",
            "type": "object"
        },
        "InvalidParamsError": {
            "properties": {
                "code": {
                    "const": -32602,
                    "default": -32602,
                    "description": "Error code",
                    "examples": [
                        -32602
                    ],
                    "title": "Code",
                    "type": "integer"
                },
                "message": {
                    "const": "Invalid parameters",
                    "default": "Invalid parameters",
                    "description": "A short description of the error",
                    "examples": [
                        "Invalid parameters"
                    ],
                    "title": "Message",
                    "type": "string"
                },
                "data": {
                    "anyOf": [
                        {},
                        {
                            "type": "null"
                        }
                    ],
                    "default": null,
                    "title": "Data"
                }
            },
            "required": [
                "code",
                "message"
            ],
            "title": "InvalidParamsError",
            "type": "object"
        },
        "InvalidRequestError": {
            "properties": {
                "code": {
                    "const": -32600,
                    "default": -32600,
                    "description": "Error code",
                    "examples": [
                        -32600
                    ],
                    "title": "Code",
                    "type": "integer"
                },
                "message": {
                    "const": "Request payload validation error",
                    "default": "Request payload validation error",
                    "description": "A short description of the error",
                    "examples": [
                        "Request payload validation error"
                    ],
                    "title": "Message",
                    "type": "string"
                },
                "data": {
                    "anyOf": [
                        {},
                        {
                            "type": "null"
                        }
                    ],
                    "default": null,
                    "title": "Data"
                }
            },
            "required": [
                "code",
                "message"
            ],
            "title": "InvalidRequestError",
            "type": "object"
        },
        "JSONParseError": {
            "properties": {
                "code": {
                    "const": -32700,
                    "default": -32700,
                    "description": "Error code",
                    "examples": [
                        -32700
                    ],
                    "title": "Code",
                    "type": "integer"
                },
                "message": {
                    "const": "Invalid JSON payload",
                    "default": "Invalid JSON payload",
                    "description": "A short description of the error",
                    "examples": [
                        "Invalid JSON payload"
                    ],
                    "title": "Message",
                    "type": "string"
                },
                "data": {
                    "anyOf": [
                        {},
                        {
                            "type": "null"
                        }
                    ],
                    "default": null,
                    "title": "Data"
                }
            },
            "required": [
                "code",
                "message"
            ],
            "title": "JSONParseError",
            "type": "object"
        },
        "JSONRPCError": {
            "properties": {
                "code": {
                    "title": "Code",
                    "type": "integer"
                },
                "message": {
                    "title": "Message",
                    "type": "string"
                },
                "data": {
                    "anyOf": [
                        {},
                        {
                            "type": "null"
                        }
                    ],
                    "default": null,
                    "title": "Data"
                }
            },
            "required": [
                "code",
                "message"
            ],
            "title": "JSONRPCError",
            "type": "object"
        },
        "JSONRPCErrorResponse": {
            "description": "Represents a JSON-RPC 2.0 Error Response object.",
            "properties": {
                "error": {
                    "anyOf": [
                        {
                            "$ref": "#/definitions/JSONRPCError"
                        },
                        {
                            "$ref": "#/definitions/JSONParseError"
                        },
                        {
                            "$ref": "#/definitions/InvalidRequestError"
                        },
                        {
                            "$ref": "#/definitions/MethodNotFoundError"
                        },
                        {
                            "$ref": "#/definitions/InvalidParamsError"
                        },
                        {
                            "$ref": "#/definitions/InternalError"
                        }
                    ]
                },
                "id": {
                    "description": "An identifier identical to the correlated request",
                    "type": [
                        "string",
                        "integer"
                    ]
                },
                "jsonrpc": {
                    "const": "2.0",
                    "description": "Specifies the version of the JSON-RPC protocol. MUST be exactly \"2.0\".",
                    "type": "string"
                }
            },
            "required": [
                "error",
                "id",
                "jsonrpc"
            ],
            "type": "object"
        },
        "JSONRPCRequest": {
            "properties": {
                "jsonrpc": {
                    "const": "2.0",
                    "default": "2.0",
                    "title": "Jsonrpc",
                    "type": "string"
                },
                "id": {
                    "anyOf": [
                        {
                            "type": "integer"
                        },
                        {
                            "type": "string"
                        },
                        {
                            "type": "null"
                        }
                    ],
                    "title": "Id"
                },
                "method": {
                    "title": "Method",
                    "type": "string"
                },
                "params": {
                    "anyOf": [
                        {
                            "additionalProperties": {},
                            "type": "object"
                        },
                        {
                            "type": "null"
                        }
                    ],
                    "default": null,
                    "title": "Params"
                }
            },
            "required": [
                "method"
            ],
            "title": "JSONRPCRequest",
            "type": "object"
        },
        "JSONRPCResponse": {
            "properties": {
                "jsonrpc": {
                    "const": "2.0",
                    "default": "2.0",
                    "title": "Jsonrpc",
                    "type": "string"
                },
                "id": {
                    "anyOf": [
                        {
                            "type": "integer"
                        },
                        {
                            "type": "string"
                        },
                        {
                            "type": "null"
                        }
                    ],
                    "title": "Id"
                },
                "result": {
                    "anyOf": [
                        {},
                        {
                            "type": "null"
                        }
                    ],
                    "default": null,
                    "title": "Result"
                },
                "error": {
                    "anyOf": [
                        {
                            "$ref": "#/$defs/JSONRPCError"
                        },
                        {
                            "type": "null"
                        }
                    ],
                    "default": null
                }
            },
            "title": "JSONRPCResponse",
            "type": "object"
        },
        "KnowledgeRetrievalStep": {
            "properties": {
                "jsonrpc": {
                    "const": "2.0",
                    "default": "2.0",
                    "title": "Jsonrpc",
                    "type": "string"
                },
                "id": {
                    "anyOf": [
                        {
                            "type": "integer"
                        },
                        {
                            "type": "string"
                        }
                    ],
                    "title": "Id"
                },
                "method": {
                    "const": "steps/knowledgeRetrieval",
                    "default": "steps/knowledgeRetrieval",
                    "title": "Method",
                    "type": "string"
                },
                "params": {
                    "type": "object",
                    "properties": {
                        "context": {
                            "$ref": "#/$defs/StepContext"
                        },
                        "knowledgeStep": {
                            "$ref": "#/$defs/KnowledgeRetrievalStepParams"
                        },
                        "reasoning": {
                            "type": "string",
                            "title": "Reasoning"
                        }
                    },
                    "required": [
                        "context",
                        "knowledgeStep"
                    ]
                }
            },
            "required": [
                "method",
                "params",
                "id"
            ],
            "title": "KnowledgeRetrievalStep",
            "type": "object"
        },
        "KnowledgeRetrievalStepParams": {
            "type": "object",
            "properties": {
                "query": {
                    "type": "string",
                    "title": "Query",
                    "description": "The query to retrieve knowledge"
                },
                "keywords": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Keywords for knowledge retrieval hints"
                },
                "results": {
                    "type": "array",
                    "items": {
                        "$ref": "#/$defs/KnowledgeRetrievalResult"
                    }
                }
            },
            "required": [
                "results"
            ]
        },
        "KnowledgeRetrievalResult": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string",
                    "title": "Id"
                },
                "content": {
                    "type": "string",
                    "title": "Content"
                },
                "mimeType": {
                    "type": "string",
                    "title": "Mime Type",
                    "description": "The mime type of the content"
                },
                "metadata": {
                    "anyOf": [
                        {
                            "additionalProperties": {},
                            "type": "object"
                        },
                        {
                            "type": "null"
                        }
                    ],
                    "default": null,
                    "title": "Metadata"
                }
            },
            "required": [
                "id",
                "content"
            ]
        },
        "MCPMessage": {
            "properties": {
                "jsonrpc": {
                    "const": "2.0",
                    "default": "2.0",
                    "title": "Jsonrpc",
                    "type": "string"
                },
                "id": {
                    "anyOf": [
                        {
                            "type": "integer"
                        },
                        {
                            "type": "string"
                        }
                    ],
                    "title": "Id"
                },
                "method": {
                    "const": "protocols/MCP",
                    "default": "protocols/MCP",
                    "title": "Method",
                    "type": "string"
                },
                "params": {
                    "type": "object",
                    "properties": {
                        "message": {
                            "additionalProperties": {},
                            "title": "message",
                            "type": "object",
                            "description": "The raw json message of MCP protocol"
                        },
                        "reasoning": {
                            "type": "string",
                            "title": "Reasoning"
                        },
                        "required": [
                            "message"
                        ]
                    }
                },
                "required": [
                    "method",
                    "params",
                    "id"
                ],
                "title": "MCPMessage",
                "type": "object",
                "description": "Method that captures the MCP protocol messages."
            }
        },
        "MCPServer": {
            "description": "Information about an MCP server.",
            "properties": {
                "name": {
                    "type": "string"
                },
                "version": {
                    "type": "string"
                }
            },
            "required": [
                "name",
                "version"
            ],
            "type": "object"
        },
        "MemoryContextRetrievalStep": {
            "properties": {
                "jsonrpc": {
                    "const": "2.0",
                    "default": "2.0",
                    "title": "Jsonrpc",
                    "type": "string"
                },
                "id": {
                    "anyOf": [
                        {
                            "type": "integer"
                        },
                        {
                            "type": "string"
                        }
                    ],
                    "title": "Id"
                },
                "method": {
                    "const": "steps/memoryContextRetrieval",
                    "default": "steps/memoryContextRetrieval",
                    "title": "Method",
                    "type": "string"
                },
                "params": {
                    "type": "object",
                    "properties": {
                        "context": {
                            "$ref": "#/$defs/StepContext"
                        },
                        "memory": {
                            "title": "memory",
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "reasoning": {
                            "type": "string",
                            "title": "Reasoning"
                        }
                    },
                    "required": [
                        "context",
                        "memory"
                    ]
                }
            },
            "required": [
                "method",
                "params",
                "id"
            ],
            "title": "MemoryContextRetrievalStep",
            "type": "object"
        },
        "MemoryStoreStep": {
            "properties": {
                "jsonrpc": {
                    "const": "2.0",
                    "default": "2.0",
                    "title": "Jsonrpc",
                    "type": "string"
                },
                "id": {
                    "anyOf": [
                        {
                            "type": "integer"
                        },
                        {
                            "type": "string"
                        }
                    ],
                    "title": "Id"
                },
                "method": {
                    "const": "steps/memoryStore",
                    "default": "steps/memoryStore",
                    "title": "Method",
                    "type": "string"
                },
                "params": {
                    "type": "object",
                    "properties": {
                        "context": {
                            "$ref": "#/$defs/StepContext"
                        },
                        "memory": {
                            "title": "memory",
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "reasoning": {
                            "type": "string",
                            "title": "Reasoning"
                        }
                    },
                    "required": [
                        "context",
                        "memory"
                    ]
                }
            },
            "required": [
                "method",
                "params",
                "id"
            ],
            "title": "MemoryStoreStep",
            "type": "object"
        },
        "LlmProvider": {
            "properties": {
                "name": {
                    "title": "Name",
                    "type": "string"
                },
                "metadata": {
                    "anyOf": [
                        {
                            "additionalProperties": {},
                            "type": "object"
                        },
                        {
                            "type": "null"
                        }
                    ],
                    "default": null,
                    "title": "Metadata"
                }
            },
            "required": [
                "name"
            ],
            "title": "LlmProvider",
            "type": "object"
        },
        "Message": {
            "properties": {
                "role": {
                    "enum": [
                        "user",
                        "agent",
                        "system"
                    ],
                    "title": "Role",
                    "type": "string"
                },
                "content": {
                    "items": {
                        "$ref": "#/$defs/Part"
                    },
                    "title": "Parts",
                    "type": "array"
                },
                "id": {
                    "type": "string",
                    "title": "Id",
                    "description": "Id of the message"
                },
                "metadata": {
                    "anyOf": [
                        {
                            "additionalProperties": {},
                            "type": "object"
                        },
                        {
                            "type": "null"
                        }
                    ],
                    "default": null,
                    "title": "Metadata"
                }
            },
            "required": [
                "role",
                "content",
                "id"
            ],
            "title": "Message",
            "type": "object"
        },
        "MessageStep": {
            "properties": {
                "jsonrpc": {
                    "const": "2.0",
                    "default": "2.0",
                    "title": "Jsonrpc",
                    "type": "string"
                },
                "id": {
                    "anyOf": [
                        {
                            "type": "integer"
                        },
                        {
                            "type": "string"
                        }
                    ],
                    "title": "Id"
                },
                "method": {
                    "const": "steps/message",
                    "default": "steps/message",
                    "title": "Method",
                    "type": "string"
                },
                "params": {
                    "type": "object",
                    "properties": {
                        "context": {
                            "$ref": "#/$defs/StepContext"
                        },
                        "message": {
                            "$ref": "#/$defs/Message"
                        },
                        "citations": {
                            "type": "array",
                            "items": {
                                "$ref": "#/$defs/Source"
                            }
                        },
                        "reasoning": {
                            "type": "string",
                            "title": "Reasoning"
                        }
                    },
                    "required": [
                        "context",
                        "message"
                    ]
                }
            },
            "required": [
                "method",
                "params",
                "id"
            ],
            "title": "MessageStep",
            "type": "object"
        },
        "MethodNotFoundError": {
            "properties": {
                "code": {
                    "const": -32601,
                    "default": -32601,
                    "description": "Error code",
                    "examples": [
                        -32601
                    ],
                    "title": "Code",
                    "type": "integer"
                },
                "message": {
                    "const": "Method not found",
                    "default": "Method not found",
                    "description": "A short description of the error",
                    "examples": [
                        "Method not found"
                    ],
                    "title": "Message",
                    "type": "string"
                },
                "data": {
                    "const": null,
                    "default": null,
                    "title": "Data"
                }
            },
            "required": [
                "code",
                "message",
                "data"
            ],
            "title": "MethodNotFoundError",
            "type": "object"
        },
        "Organization": {
            "properties": {
                "id": {
                    "type": "string",
                    "description": "The unique identifier of the organization"
                },
                "name": {
                    "type": "string",
                    "description": "The name of the organization"
                },
                "metadata": {
                    "anyOf": [
                        {
                            "additionalProperties": {},
                            "type": "object"
                        },
                        {
                            "type": "null"
                        }
                    ],
                    "default": null,
                    "title": "Metadata"
                }
            },
            "required": [
                "id"
            ]
        },
        "Model": {
            "type": "object",
            "title": "Model",
            "properties": {
                "id": {
                    "type": "string",
                    "description": "The unique identifier of the model"
                },
                "name": {
                    "type": "string",
                    "description": "The name of the model"
                },
                "provider": {
                    "$ref": "#/$defs/LlmProvider"
                },
                "type": {
                    "type": "string",
                    "enum": [
                        "chat",
                        "completion",
                        "embedding"
                    ]
                },
                "maxTokens": {
                    "type": "integer"
                },
                "defaultParams": {
                    "type": "object",
                    "additionalProperties": true
                },
                "contextWindow": {
                    "type": "integer"
                },
                "stopSequences": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "metadata": {
                    "anyOf": [
                        {
                            "additionalProperties": {},
                            "type": "object"
                        },
                        {
                            "type": "null"
                        }
                    ],
                    "default": null,
                    "title": "Metadata"
                }
            },
            "required": [
                "id",
                "name",
                "provider"
            ]
        },
        "Part": {
            "anyOf": [
                {
                    "$ref": "#/$defs/TextPart"
                },
                {
                    "$ref": "#/$defs/FilePart"
                },
                {
                    "$ref": "#/$defs/DataPart"
                }
            ],
            "title": "Part"
        },
        "PingRequest": {
            "type": "object",
            "title": "PingRequest",
            "properties": {
                "jsonrpc": {
                    "const": "2.0",
                    "default": "2.0",
                    "title": "Jsonrpc",
                    "type": "string"
                },
                "id": {
                    "anyOf": [
                        {
                            "type": "integer"
                        },
                        {
                            "type": "string"
                        }
                    ],
                    "title": "Id"
                },
                "method": {
                    "const": "ping",
                    "default": "ping",
                    "title": "Method",
                    "type": "string"
                },
                "params": {
                    "type": "object",
                    "properties": {
                        "timestamp": {
                            "type": "string",
                            "format": "date-time",
                            "description": "ISO 8601 timestamp of the request"
                        },
                        "timeout": {
                            "type": "integer",
                            "description": "Timeout in milliseconds",
                            "default": 5000
                        },
                        "metadata": {
                            "anyOf": [
                                {
                                    "additionalProperties": {},
                                    "type": "object"
                                },
                                {
                                    "type": "null"
                                }
                            ],
                            "default": null,
                            "title": "Metadata"
                        }
                    }
                }
            },
            "required": [
                "method",
                "id",
                "timestamp"
            ]
        },
        "PingRequestSuccessResponse": {
            "type": "object",
            "title": "PingRequestSuccessResponse",
            "properties": {
                "jsonrpc": {
                    "const": "2.0",
                    "default": "2.0",
                    "title": "Jsonrpc",
                    "type": "string"
                },
                "id": {
                    "anyOf": [
                        {
                            "type": "integer"
                        },
                        {
                            "type": "string"
                        }
                    ],
                    "title": "Id"
                },
                "result": {
                    "$ref": "#/$defs/PingRequestResult"
                }
            },
            "required": [
                "id",
                "result",
                "jsonrpc"
            ]
        },
        "PingRequestResult": {
            "type": "object",
            "title": "PingRequestResult",
            "properties": {
                "status": {
                    "type": "string",
                    "enum": [
                        "connected",
                        "error"
                    ]
                },
                "version": {
                    "type": "string",
                    "description": "Agent version"
                },
                "timestamp": {
                    "type": "string",
                    "format": "date-time",
                    "description": "ISO 8601 timestamp of the request"
                },
                "metadata": {
                    "anyOf": [
                        {
                            "additionalProperties": {},
                            "type": "object"
                        },
                        {
                            "type": "null"
                        }
                    ],
                    "default": null,
                    "title": "Metadata"
                }
            },
            "required": [
                "status",
                "version",
                "timestamp"
            ]
        },
        "Resource": {
            "description": "A known resource that the server is capable of reading.",
            "properties": {
                "description": {
                    "description": "A description of what this resource represents.",
                    "type": "string"
                },
                "mimeType": {
                    "description": "The MIME type of this resource, if known.",
                    "type": "string"
                },
                "name": {
                    "description": "A human-readable name for this resource.",
                    "type": "string"
                },
                "id": {
                    "type": "string",
                    "description": "The unique identifier of the resource."
                },
                "content": {
                    "type": "string",
                    "description": "The content of the resource."
                },
                "metadata": {
                    "anyOf": [
                        {
                            "additionalProperties": {},
                            "type": "object"
                        },
                        {
                            "type": "null"
                        }
                    ],
                    "default": null,
                    "title": "Metadata"
                }
            },
            "required": [
                "id",
                "name",
                "content"
            ],
            "type": "object"
        },
        "Session": {
            "type": "object",
            "title": "Session",
            "properties": {
                "id": {
                    "type": "string",
                    "title": "Id",
                    "description": "Id of the session / conversation"
                },
                "metadata": {
                    "anyOf": [
                        {
                            "additionalProperties": {},
                            "type": "object"
                        },
                        {
                            "type": "null"
                        }
                    ],
                    "default": null,
                    "title": "Metadata"
                }
            },
            "required": [
                "id"
            ]
        },
        "SiteSource": {
            "type": "object",
            "title": "SiteSource",
            "properties": {
                "kind": {
                    "const": "site",
                    "type": "string"
                },
                "url": {
                    "type": "string"
                }
            },
            "required": [
                "kind",
                "url"
            ]
        },
        "Source": {
            "oneOf": [
                {
                    "$ref": "#/$defs/FileSource"
                },
                {
                    "$ref": "#/$defs/SiteSource"
                }
            ],
            "title": "Source"
        },
        "StepContext": {
            "type": "object",
            "title": "StepContext",
            "properties": {
                "agent": {
                    "$ref": "#/$defs/Agent"
                },
                "session": {
                    "$ref": "#/$defs/Session"
                },
                "turnId": {
                    "type": "string",
                    "title": "TurnId",
                    "description": "Id of the current turn in the session"
                },
                "stepId": {
                    "type": "string",
                    "title": "StepId",
                    "description": "Id of the current step in the session"
                },
                "timestamp": {
                    "type": "string",
                    "format": "date-time",
                    "description": "ISO 8601 timestamp of the request"
                },
                "user": {
                    "$ref": "#/$defs/User"
                }
            },
            "additionalProperties": {
                "anyOf": [
                    {
                        "type": "object"
                    },
                    {
                        "type": "null"
                    }
                ],
                "default": null
            },
            "required": [
                "agent",
                "session",
                "turnId",
                "stepId",
                "timestamp"
            ]
        },
        "TextPart": {
            "properties": {
                "kind": {
                    "const": "text",
                    "default": "text",
                    "description": "Type of the part",
                    "examples": [
                        "text"
                    ],
                    "title": "Kind",
                    "type": "string"
                },
                "text": {
                    "title": "Text",
                    "type": "string"
                },
                "metadata": {
                    "anyOf": [
                        {
                            "additionalProperties": {},
                            "type": "object"
                        },
                        {
                            "type": "null"
                        }
                    ],
                    "default": null,
                    "title": "Metadata"
                }
            },
            "required": [
                "text"
            ],
            "title": "TextPart",
            "type": "object"
        },
        "ToolArgumentDefinition": {
            "type": "object",
            "properties": {
                "name": {
                    "type": "string",
                    "description": "Name of the argument",
                    "title": "Name"
                },
                "id": {
                    "type": "string",
                    "description": "Unique identifier for the argument",
                    "title": "Id"
                },
                "description": {
                    "type": "string",
                    "title": "Description",
                    "description": "Description of the argument"
                },
                "type": {
                    "type": "string",
                    "title": "Type",
                    "description": "Type information for the argument",
                    "enum": [
                        "string",
                        "number",
                        "boolean",
                        "object",
                        "array",
                        "null"
                    ]
                },
                "mimeType": {
                    "anyOf": [
                        {
                            "type": "string"
                        },
                        {
                            "type": "null"
                        }
                    ],
                    "description": "MIME type of the value if applicable",
                    "default": null,
                    "title": "Mimetype",
                    "examples": [
                        "application/json",
                        "text/plain",
                        "image/png",
                        "audio/mpeg"
                    ]
                },
                "required": {
                    "type": "boolean",
                    "title": "Required",
                    "description": "Whether the argument is required"
                }
            },
            "required": [
                "name",
                "required"
            ]
        },
        "ToolArgumentValue": {
            "type": "object",
            "title": "ToolArgumentValue",
            "properties": {
                "name": {
                    "type": "string",
                    "title": "Name"
                },
                "id": {
                    "type": "string",
                    "title": "Id"
                },
                "value": {
                    "description": "The argument value",
                    "anyOf": [
                        {
                            "type": "string"
                        },
                        {
                            "type": "number"
                        },
                        {
                            "type": "boolean"
                        },
                        {
                            "type": "object"
                        },
                        {
                            "type": "array"
                        },
                        {
                            "type": "null"
                        }
                    ],
                    "title": "Value"
                }
            },
            "required": [
                "name",
                "value"
            ]
        },
        "ToolCallRequestStep": {
            "properties": {
                "jsonrpc": {
                    "const": "2.0",
                    "default": "2.0",
                    "title": "Jsonrpc",
                    "type": "string"
                },
                "id": {
                    "anyOf": [
                        {
                            "type": "integer"
                        },
                        {
                            "type": "string"
                        }
                    ],
                    "title": "Id"
                },
                "method": {
                    "const": "steps/toolCallRequest",
                    "default": "steps/toolCallRequest",
                    "title": "Method",
                    "type": "string"
                },
                "params": {
                    "type": "object",
                    "properties": {
                        "context": {
                            "$ref": "#/$defs/StepContext"
                        },
                        "toolCallRequest": {
                            "$ref": "#/$defs/ToolCallRequest"
                        },
                        "reasoning": {
                            "type": "string",
                            "title": "Reasoning"
                        }
                    },
                    "required": [
                        "context",
                        "toolCallRequest"
                    ]
                }
            },
            "required": [
                "method",
                "params",
                "id"
            ],
            "title": "ToolCallRequestStep",
            "type": "object"
        },
        "ToolCallResult": {
            "type": "object",
            "properties": {
                "outputs": {
                    "type": "array",
                    "items": {
                        "$ref": "#/$defs/TextPart"
                    }
                },
                "isError": {
                    "type": "boolean",
                    "description": "Whether the tool call resulted in an error"
                }
            },
            "required": [
                "outputs",
                "isError"
            ]
        },
        "ToolCallResultStep": {
            "properties": {
                "jsonrpc": {
                    "const": "2.0",
                    "default": "2.0",
                    "title": "Jsonrpc",
                    "type": "string"
                },
                "id": {
                    "anyOf": [
                        {
                            "type": "integer"
                        },
                        {
                            "type": "string"
                        }
                    ],
                    "title": "Id"
                },
                "method": {
                    "const": "steps/toolCallResult",
                    "default": "steps/toolCallResult",
                    "title": "Method",
                    "type": "string"
                },
                "params": {
                    "type": "object",
                    "properties": {
                        "context": {
                            "$ref": "#/$defs/StepContext"
                        },
                        "toolCallResult": {
                            "type": "object",
                            "properties": {
                                "executionId": {
                                    "type": "string",
                                    "title": "ExecutionId",
                                    "description": "Id of the execution set by the agent"
                                },
                                "result": {
                                    "$ref": "#/$defs/ToolCallResult"
                                }
                            },
                            "required": [
                                "executionId",
                                "result"
                            ]
                        }
                    },
                    "required": [
                        "context",
                        "toolCallResult"
                    ]
                }
            },
            "required": [
                "method",
                "params",
                "id"
            ],
            "title": "ToolCallResultStep",
            "type": "object"
        },
        "ToolDefinition": {
            "type": "object",
            "title": "ToolDefinition",
            "properties": {
                "name": {
                    "type": "string",
                    "title": "Name"
                },
                "id": {
                    "type": "string",
                    "title": "Id"
                },
                "description": {
                    "type": "string",
                    "title": "Description"
                },
                "type": {
                    "type": "string",
                    "title": "Type"
                },
                "arguments": {
                    "anyOf": [
                        {
                            "type": "array",
                            "items": {
                                "$ref": "#/$defs/ToolArgumentDefinition"
                            }
                        },
                        {
                            "type": "null"
                        }
                    ],
                    "title": "Arguments"
                },
                "outputs": {
                    "anyOf": [
                        {
                            "type": "array",
                            "items": {
                                "$ref": "#/$defs/ToolOutputDefinition"
                            }
                        },
                        {
                            "type": "null"
                        }
                    ],
                    "title": "Outputs"
                }
            },
            "required": [
                "name",
                "id",
                "type",
                "arguments",
                "outputs"
            ]
        },
        "ToolCallRequest": {
            "type": "object",
            "title": "ToolCallRequest",
            "properties": {
                "executionId": {
                    "type": "string",
                    "title": "ExecutionId",
                    "description": "Id of the execution set by the agent"
                },
                "toolId": {
                    "type": "string",
                    "title": "ToolId",
                    "description": "Id of the tool to be called"
                },
                "inputs": {
                    "type": "array",
                    "items": {
                        "$ref": "#/$defs/ToolArgumentValue"
                    }
                }
            },
            "required": [
                "toolId",
                "inputs",
                "executionId"
            ]
        },
        "ToolOutputDefinition": {
            "type": "object",
            "properties": {
                "name": {
                    "type": "string",
                    "description": "Name of the output parameter",
                    "title": "Name"
                },
                "id": {
                    "type": "string",
                    "description": "Unique identifier of the output parameter",
                    "title": "Id"
                },
                "description": {
                    "type": "string",
                    "title": "Description",
                    "description": "Description of the tool output parameter"
                },
                "type": {
                    "type": "string",
                    "title": "Type",
                    "description": "Type of the tool output parameter",
                    "enum": [
                        "string",
                        "number",
                        "boolean",
                        "object",
                        "array",
                        "null"
                    ]
                },
                "mimeType": {
                    "anyOf": [
                        {
                            "type": "string"
                        },
                        {
                            "type": "null"
                        }
                    ],
                    "description": "MIME type of the value if applicable",
                    "default": null,
                    "title": "Mimetype",
                    "examples": [
                        "application/json",
                        "text/plain",
                        "image/png",
                        "audio/mpeg"
                    ]
                }
            }
        },
        "User": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string",
                    "description": "The unique identifier of the user"
                },
                "name": {
                    "type": "string",
                    "description": "The name of the user"
                },
                "email": {
                    "type": "string",
                    "description": "The email of the user"
                },
                "organization": {
                    "$ref": "#/$defs/Organization",
                    "description": "The organization of the user"
                },
                "metadata": {
                    "anyOf": [
                        {
                            "additionalProperties": {},
                            "type": "object"
                        },
                        {
                            "type": "null"
                        }
                    ],
                    "default": null,
                    "title": "Metadata"
                }
            },
            "required": [
                "id"
            ]
        }
    }
}